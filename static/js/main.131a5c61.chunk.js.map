{"version":3,"sources":["delete.svg","components/DisplayBoard/Value.js","components/DisplayBoard/Borad.js","components/Expense/Expense.js","components/Form/From.js","components/Button/Button.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","thousands_separators","num","num_parts","toString","split","replace","join","getAmount","props","str","getIncome","data","amount","filter","ele","status","map","totalIncome","length","reduce","a","b","parseInt","board","totalSpend","totalAmount","isNaN","Fragment","style","color","marginRight","expense","StyleDiv","styled","div","Object","keys","fontSize","margin","date","className","description","width","cursor","onClick","remove","id","src","deleteImag","alt","form","heading","errorClass","error","visible","onSubmit","submit","type","name","onChange","required","placeholder","value","button","ButtonDiv","textAlign","background","App","state","newAmount","validate","Number","alert","setState","event","preventDefault","target","reset","amountHandeler","dateHandler","descriptionHandeler","statusHandler","deleteHandler","res","e","this","index","Expense","key","Button","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.131a5c61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/delete.46a3fbea.svg\";","export const thousands_separators = (num) => \r\n  {\r\n    var num_parts = num.toString().split(\".\");\r\n    num_parts[0] = num_parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    return num_parts.join(\".\");\r\n  }\r\n\r\n\r\n  export const getAmount = (props,str) => {\r\n    // eslint-disable-next-line array-callback-return\r\n    let incomeAmount = props.data.amount.filter((ele) => {\r\n      if(ele.status=== str){\r\n          return ele;\r\n      }  \r\n    })\r\n    let getIncome = incomeAmount.map((ele => ele.amount));\r\n    let totalIncome =0;\r\n    if(getIncome.length !==0){\r\n     totalIncome =getIncome.reduce((a,b)=>{\r\n         return parseInt(a) + parseInt(b)\r\n    })\r\n    }\r\n    return totalIncome\r\n  }","import React from 'react'\r\nimport {thousands_separators, getAmount} from './Value'\r\nconst board = (props) => {\r\n\r\n    let totalIncome = getAmount(props,'INCOME')\r\n    let totalSpend = getAmount(props,'SPEND')\r\n    let totalAmount = (isNaN(totalIncome - totalSpend))? null : totalIncome - totalSpend\r\n\r\n    return(\r\n        <React.Fragment>\r\n        <h4>Balance</h4>\r\n        <h2>{thousands_separators(totalAmount)} CKZ</h2>\r\n        <span style={{color:'#21d21f',marginRight:'20px'}}>Income: {thousands_separators(totalIncome)} KC</span>\r\n        <span style={{color:'red'}}>Spend: {thousands_separators(totalSpend)} KC</span>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default board","import React from 'react'\r\nimport deleteImag from '../../delete.svg'\r\nimport {thousands_separators} from '../DisplayBoard/Value'\r\nimport styled from 'styled-components';\r\nconst expense = (props) => {\r\n    const StyleDiv = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-bottom: 2px solid #000;\r\n    padding-bottom: 10px;\r\n    & p {\r\n      margin: 5px;\r\n    }\r\n    & img {\r\n      transition:0.35s all;\r\n      &:hover {\r\n        transform:scale(1.3)\r\n      }\r\n    }\r\n    `\r\n    let color = (props.data.status ==='INCOME') ? 'green' : 'red'\r\n    \r\n    return(\r\n     \r\n    (Object.keys(props.data).length === 0)? '': \r\n        <div>\r\n         <p style={{fontSize:'10px',margin:'5px 0 0 5px',color:'#6f6969'}}>{props.data.date}</p>\r\n         <StyleDiv>\r\n            <p style={{fontSize:'15px'}} className={color}>{thousands_separators(props.data.amount)}</p>\r\n            <p style={{fontSize:'14px'}}>{props.data.description}</p>\r\n            <img style={{width: '30px', cursor:'pointer'}} onClick ={()=>{props.remove(props.data.id)}} src={deleteImag} alt=\"delete\"/>\r\n         </StyleDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default expense","import React from 'react'\r\nimport './From.css'\r\n\r\nconst form = (props) => {\r\n    let heading = (props.data.length === 0)? 'Please Add Income/Spend Amount':''\r\n    let errorClass = (props.error === true)? 'error':''\r\n    let button = (props.visible === false) ? <h4>{heading}</h4>:\r\n\r\n    <React.Fragment>\r\n    <div className=\"input--wrap\"><form onSubmit={props.submit}> \r\n    <input type=\"date\" name=\"date\" onChange={props.date} required />\r\n    <input type =\"text\"  className={errorClass} onChange={props.amount} required placeholder=\"Enter Amount\"/>\r\n    <textarea onChange={props.description} placeholder=\"Description\" required></textarea>\r\n    <input type=\"submit\" value=\"ADD\" />\r\n    </form></div>\r\n    </React.Fragment>\r\n    \r\n    return(\r\n         button\r\n    )\r\n}\r\n\r\nexport default form","import React from 'react'\r\nimport styled from 'styled-components';\r\nconst button = (props) => {\r\nconst ButtonDiv = styled.button `\r\n    text-align: center;\r\n    margin: 10px 20px;\r\n    cursor: pointer;\r\n    display:inline-block;\r\n    padding: 5px;\r\n    border: 1px solid #000;\r\n    box-shadow: 1px 4px 5px 5px #000;\r\n    transition: 0.35s all;\r\n    &:hover {   \r\n    box-shadow: 1px 4px 5px 2px #667070;\r\n    }\r\n\r\n`\r\n    let button = (props.visible === true) ? '':\r\n    <React.Fragment>\r\n        <div style={{textAlign:'center'}}>\r\n        <ButtonDiv style={{background:'#0ce10c'}}onClick={()=>{props.status('INCOME')}}>Add Income</ButtonDiv>\r\n        <ButtonDiv  style={{background:'red'}} onClick={()=>{props.status('SPEND')}}>Add Spending</ButtonDiv>\r\n        </div>\r\n        </React.Fragment>\r\n    return(\r\n        \r\n        button\r\n        \r\n    )\r\n}\r\n\r\nexport default button","/* eslint-disable array-callback-return */\nimport React, { Component } from 'react';\nimport './App.css';\nimport Board from './components/DisplayBoard/Borad'\nimport Expense from './components/Expense/Expense'\nimport Form   from './components/Form/From'\nimport Button from './components/Button/Button'\n\nclass App extends Component {\n\n  state = {\n    newAmount:{\n      id:0,\n      date:null,\n      amount:null,\n      description:'',\n      status:''\n    },\n    amount:[],\n    status:'',\n    error:false,\n    visible: false    \n  }\n  validate = () => {\n\n    if(!Number(this.state.newAmount.amount) || this.state.newAmount.amount < 0 || this.state.newAmount.date == null || this.state.newAmount.description ==='' ){\n      alert('Please Enter Valied Number')\n      this.setState({\n        error: true\n      })\n      return false\n    }\n    this.setState({\n      error: false\n    })\n    return true\n  }\n  submit = (event) => {\n    event.preventDefault();\n    let valid = this.validate()\n    if(valid) {\n    this.setState({\n      amount: [...this.state.amount, this.state.newAmount]\n    })\n    event.target.reset();\n    this.setState({\n      visible: !this.state.visible\n    })\n  }\n  }\n\n  amountHandeler = (event) => {\n   this.setState({\n    newAmount: {  id:this.state.newAmount.id + 1, date:this.state.newAmount.date, amount:event.target.value, \n                  description: this.state.newAmount.description, status:this.state.newAmount.status }\n   })\n  }\n  dateHandler = (event) => {\n    this.setState({\n      newAmount: {  id:this.state.newAmount.id + 1,date:this.state.newAmount.date, amount:this.state.newAmount.amount, \n                    description: this.state.newAmount.description, status:this.state.newAmount.status }\n     })\n  }\n  \n  descriptionHandeler = (event) => {\n    this.setState({\n      newAmount: {  id:this.state.newAmount.id + 1,date:this.state.newAmount.date, amount: this.state.newAmount.amount,\n                    description:event.target.value, status:this.state.newAmount.status  }\n     })\n  }\n  statusHandler = (ele) => {\n    this.setState({\n      newAmount: {  id:this.state.newAmount.id + 1, date:this.state.newAmount.date, amount: this.state.newAmount.amount, \n                    description:this.state.newAmount.description, status:ele  }\n     })\n     this.setState({\n      visible: !this.state.visible\n    })\n  }\n  dateHandler = (event) => {\n    this.setState({\n      newAmount: {  id:this.state.newAmount.id + 1, date:event.target.value, amount: this.state.newAmount.amount, \n                    description:this.state.newAmount.description, status:this.state.newAmount.status  }\n     })\n  }\n  deleteHandler =(ele) => {\n   let res = this.state.amount.filter((e)=>{\n     if(e.id !== ele) {\n       return ele\n     }\n   });\n   this.setState({\n     amount: res\n   })\n  }\n  render(){\n\n    return(\n      <div className=\"container\">\n        <section className=\"board--block\"> \n          <Board data={this.state}/>\n        </section>\n        <section>\n          {this.state.amount.map((ele,index)=>{\n            return <Expense key= {index} data={ele} status={this.state.status} remove={this.deleteHandler}/>\n          })}\n          \n        </section>\n        <section>\n           <Form data = {this.state.amount} error = {this.state.error}date = {this.dateHandler}submit={this.submit} \n           amount={this.amountHandeler} description={this.descriptionHandeler} visible = {this.state.visible}/>\n        </section>\n        <section>\n           <Button  status = { this.statusHandler} visible = {this.state.visible}/>\n        </section>\n      </div>\n    )\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}